name: Development Workflow #ensure code is working before previewing deployment

on: 
  pull_request:
    branches:
      - Dev # Trigger only when pull request is merged into the dev branch.
  workflow_dispatch:

jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js (latest version)
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'  # Using stable version of node
    
    - name: npm install, test and build
      run: |
        npm install 
        npm test
        npm run build

  deploy-to-staging:
    environment: Staging
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: dev

    - name: Push code to staging
      run: |
        git config --local user.email "github-actions@github.com"
        git config --local user.name "GitHub Actions"
        git remote add staging https://github.com/MarshPeter/swe40006-assign.git
        git fetch staging
        git checkout staging
        git merge --no-ff dev --allow-unrelated-histories -m "Merge from dev to staging" 
        git push staging HEAD:staging
  
  staging:
    environment: Staging
    runs-on: ubuntu-latest
    needs: deploy-to-staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js (latest version)
      uses: actions/setup-node@v4

    - name: Create Pull Request to Prod
      uses: BetaHuhn/deploy-to-vercel-action@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        PRODUCTION: false # Don't deploy to production environment
